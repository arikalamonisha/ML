# -*- coding: utf-8 -*-
"""monisha_700762574.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/arikalamonisha/5ed0aefb0b360c19aecfb07ca56ba8ae/monisha_700762574.ipynb
"""

rows = 5
for a in range(0, rows):
    for b in range(0, a + 1):
        print("*", end=' ')
    print(" ")

for a in range(rows, 0, -1):
    for b in range(0, a - 1):
        print("*", end=' ')
    print(" ")

# Define the list
my_list = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]

# Loop through the list and print elements at odd indexes
for a in range(len(my_list)):
    if a % 2 != 0:
        print(my_list[i])

# Define the input list
x = [23, 'Python', 23.98]

# Create a new list to store the types of values
types_list = []

# Loop through the original list and append the type of each value to the new list
for value in x:
    types_list.append(type(value))

# Print the original list
print(x)

# Print the list with types of elements
print(types_list)

def get_unique_items(input_list):
    # Use a set to remove duplicates and convert it back to a list
    unique_list = list(set(input_list))
    return unique_list

# Sample list
sample_list = [1, 2, 3, 3, 3, 3, 4, 5]

# Get the unique list
unique_list = get_unique_items(sample_list)

# Print the result
print("Sample List:", sample_list)
print("Unique List:", unique_list)

def count_upper_and_lower(input_string):
    # Initialize counters
    upper_count = 0
    lower_count = 0

    # Loop through each character in the string
    for char in input_string:
        if char.isupper():
            upper_count += 1
        elif char.islower():
            lower_count += 1

    return upper_count, lower_count

# Input string
input_string = 'The quick Brow Fox'

# Get the counts of upper-case and lower-case characters
upper_count, lower_count = count_upper_and_lower(input_string)

# Print the result
print(f"No. of Upper-case characters: {upper_count}")
print(f"No. of Lower-case characters: {lower_count}")